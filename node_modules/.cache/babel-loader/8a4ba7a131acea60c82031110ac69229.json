{"ast":null,"code":"import _classCallCheck from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nvar app = new Clarifai.App({\n  apiKey: '3b2d6a108b6549f2baa43151f6f6bd22'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nvar initialState = {\n  input: '',\n  //interact parent with children\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      }); // When event happens, get the event value\n\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            //fetch connects frontend with the server\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            _this.setState(Object.assign(_this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response)); //.outputs[0].data.regions[0].region_info.bounding_box\n\n      }).catch(function (err) {\n        return console.log(err);\n      }); // do something with response\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState(initialState);\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\n\nconst app = new Clarifai.App({\n    apiKey: '3b2d6a108b6549f2baa43151f6f6bd22'\n});\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 150,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nconst initialState = {\n    input: '', //interact parent with children\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n}\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = initialState;\n  }\n\n  loadUser = (data) => {\n      this.setState({user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n      }})\n  }\n\n\n    calculateFaceLocation = (data) => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return{\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height),\n      }\n}\n\ndisplayFaceBox = (box) => {\n      this.setState({box: box})\n}\n\nonInputChange = (event) => {\n      this.setState({input: event.target.value}); // When event happens, get the event value\n}\n\nonButtonSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n        app.models\n        .predict(\n            Clarifai.FACE_DETECT_MODEL,\n            this.state.input)\n            .then(response => {\n                if (response) {\n                    fetch('http://localhost:3000/image', { //fetch connects frontend with the server\n                        method: 'put',\n                        headers: {'Content-Type': 'application/json'},\n                        body: JSON.stringify({ // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n                            id: this.state.user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(count => {\n                            this.setState(Object.assign(this.state.user, {entries: count}))\n                        })\n                        .catch(console.log)\n                }\n                this.displayFaceBox(this.calculateFaceLocation(response)) //.outputs[0].data.regions[0].region_info.bounding_box\n            })\n            .catch(err => console.log(err));\n            // do something with response\n}\n\nonRouteChange = (route) => {\n      if (route === 'signout') {\n          this.setState(initialState)\n      } else if (route === 'home') {\n          this.setState({isSignedIn: true});\n      }\n      this.setState({route: route});\n}\n\n\n  render() {\n      const { isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n        params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n          { route === 'home'\n              ? <div>\n                  < Logo />\n                  < Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                  < ImageLinkForm\n                      onInputChange={this.onInputChange}\n                      onButtonSubmit={this.onButtonSubmit}\n                  />\n                  <FaceRecognition\n                      box={box}\n                      imageUrl={imageUrl}\n                  />\n                </div>\n              :(\n                  route === 'signin'\n                  ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                  : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              )\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}