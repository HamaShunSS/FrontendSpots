{"ast":null,"code":"import _classCallCheck from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nvar app = new Clarifai.App({\n  apiKey: '3b2d6a108b6549f2baa43151f6f6bd22\\n'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      }); // When event happens, get the event value\n\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.COLOR_MODEL, _this.state.input).then(function (response) {\n        console.log(response); // do something with response\n      }, function (err) {// there was an error\n      });\n    };\n\n    _this.state = {\n      input: '',\n      //interact parent with children\n      imageUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"}\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hamashunsuke/WebstormProjects/Face recognition/facerecognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","COLOR_MODEL","then","response","console","log","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,IAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAAjB,CAAZ;AAIA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,GADH;AAEJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,UAAU,EAAE;AAFP;AAFL;AADD;AADU,CAAzB;;IAYMR,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACV;;AADU,UAQhBS,aARgB,GAQA,UAACC,KAAD,EAAW;AACrB,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaR;AAArB,OAAd,EADqB,CACuB;;AACjD,KAVe;;AAAA,UAYhBS,cAZgB,GAYC,YAAM;AACjB,YAAKH,QAAL,CAAc;AAACI,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWJ;AAAtB,OAAd;;AACFb,MAAAA,GAAG,CAACkB,MAAJ,CACKC,OADL,CAEQzB,QAAQ,CAAC0B,WAFjB,EAGQ,MAAKH,KAAL,CAAWJ,KAHnB,EAIKQ,IAJL,CAKI,UAASC,QAAT,EAAmB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADe,CAEf;AACH,OARL,EASI,UAASG,GAAT,EAAc,CACV;AACH,OAXL;AAaH,KA3Be;;AAEV,UAAKR,KAAL,GAAa;AACTJ,MAAAA,KAAK,EAAE,EADE;AACE;AACXG,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFU;AAMb;;;;6BAwBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACA,QAAA,MAAM,EAAEb,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,aAAD;AACI,QAAA,aAAa,EAAE,KAAKO,aADxB;AAEI,QAAA,cAAc,EAAE,KAAKK,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAWE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,MADF;AAeD;;;;EA/CexB,S;;AAkDlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\n\nconst app = new Clarifai.App({\n    apiKey: '3b2d6a108b6549f2baa43151f6f6bd22\\n'\n});\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 150,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = {\n          input: '', //interact parent with children\n          imageUrl: ''\n      }\n  }\n\nonInputChange = (event) => {\n      this.setState({input: event.target.value}); // When event happens, get the event value\n}\n\nonButtonSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n    app.models\n        .predict(\n            Clarifai.COLOR_MODEL,\n            this.state.input)\n        .then(\n        function(response) {\n            console.log(response);\n            // do something with response\n        },\n        function(err) {\n            // there was an error\n        }\n    );\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n        params={particlesOptions}\n        />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n            onInputChange={this.onInputChange}\n            onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}