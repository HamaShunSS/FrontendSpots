{"ast":null,"code":"import _classCallCheck from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/src/Components/Search/Search.js\";\nimport React from 'react';\nimport CardList from '../CardList'; //child\n\nimport SearchBox from '../SearchBox'; //child\n\nimport Scroll from '../Scroll';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.onSearchChange = function (event) {\n      //whenever it gets changed\n      _this.setState({\n        searchfield: event.target.value\n      }); //update \"serachfiled is event.target.value\"\n\n    };\n\n    _this.state = {\n      professors: [],\n      searchfield: ''\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/prof', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n          name: this.state.searchfield\n        })\n      }).then(function (response) {\n        return response.json();\n      }) // Get response through json, and get data by \".then\"\n      .then(function (user) {\n        return _this2.setState({\n          professor: user.name\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filterdProfs = this.state.filter(function (prof) {\n        //\"filter\" is a function to go thorough array in \"robots from State\", having a parameter \"robot\"\n        return prof.name.toLowerCase().includes(_this3.state.toLowerCase()); //return the \"robot\"'s name if it is included\"serachfield's strings, setting lowercase every words\n      });\n      return React.createElement(\"div\", {\n        className: \"measure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Easy or Hard\"), \"                   \", React.createElement(SearchBox, {\n        onSearchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        professors: filterdProfs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/hamashunsuke/Desktop/EasyorHard/Frontend/src/Components/Search/Search.js"],"names":["React","CardList","SearchBox","Scroll","Search","props","onSearchChange","event","setState","searchfield","target","value","state","professors","fetch","method","headers","body","JSON","stringify","name","then","response","json","user","professor","filterdProfs","filter","prof","toLowerCase","includes","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAAoC;;AACpC,OAAOC,SAAP,MAAsB,cAAtB,C,CAAqC;;AACrC,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAMA,KAAN;;AADc,UAmBlBC,cAnBkB,GAmBD,UAACC,KAAD,EAAW;AAAE;AAC1B,YAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd,EADwB,CACyB;;AACpD,KArBiB;;AAEd,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFc;AAMjB;;;;wCACmB;AAAA;;AAChBK,MAAAA,KAAK,CAAC,4BAAD,EAA+B;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFuB;AAGhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE;AACnBC,UAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWH;AADA,SAAf;AAH0B,OAA/B,CAAL,CAOKY,IAPL,CAOU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPlB,EAOuC;AAPvC,OAQKF,IARL,CAQU,UAAAG,IAAI;AAAA,eAAI,MAAI,CAAChB,QAAL,CAAc;AAACiB,UAAAA,SAAS,EAAED,IAAI,CAACJ;AAAjB,SAAd,CAAJ;AAAA,OARd;AASP;;;6BAKY;AAAA;;AAEL,UAAMM,YAAY,GAAG,KAAKd,KAAL,CAAWe,MAAX,CAAkB,UAAAC,IAAI,EAAI;AAC3C;AACA,eAAOA,IAAI,CAACR,IAAL,CAAUS,WAAV,GAAwBC,QAAxB,CAAiC,MAAI,CAAClB,KAAL,CAAWiB,WAAX,EAAjC,CAAP,CAF2C,CAG3C;AACH,OAJoB,CAArB;AAKA,aACQ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAqC,QAAA,OAAO,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,yBAC+F,oBAAC,SAAD;AAAW,QAAA,cAAc,EAAE,KAAKvB,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD/F,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAEoB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADR;AAQH;;;;EAtCgB1B,KAAK,CAAC+B,S;;AAyC3B,eAAe3B,MAAf","sourcesContent":["import React from 'react';\nimport CardList from '../CardList'; //child\nimport SearchBox from '../SearchBox' //child\nimport Scroll from '../Scroll'\n\nclass Search extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            professors: [],\n            searchfield: ''\n        }\n    }\n    componentDidMount() {\n        fetch('http://localhost:3000/prof', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n                name: this.state.searchfield,\n            })\n        })\n            .then(response => response.json()) // Get response through json, and get data by \".then\"\n            .then(user => this.setState({professor: user.name}))\n}\n\n    onSearchChange = (event) => { //whenever it gets changed\n        this.setState({searchfield: event.target.value}) //update \"serachfiled is event.target.value\"\n    }\n    render() {\n\n        const filterdProfs = this.state.filter(prof => {\n            //\"filter\" is a function to go thorough array in \"robots from State\", having a parameter \"robot\"\n            return prof.name.toLowerCase().includes(this.state.toLowerCase())\n            //return the \"robot\"'s name if it is included\"serachfield's strings, setting lowercase every words\n        })\n        return (\n                <div className=\"measure\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Easy or Hard</label>                   <SearchBox onSearchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <CardList professors={filterdProfs}/>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}