{"ast":null,"code":"import _classCallCheck from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hamashunsuke/Desktop/EasyorHard/Frontend/src/Components/Infos/Infos.js\";\nimport React from 'react';\nimport CardList from './InfosCard'; //child\n\nimport Scroll from '../Scroll';\n\nvar Infos =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Infos, _React$Component);\n\n  function Infos(props) {\n    var _this;\n\n    _classCallCheck(this, Infos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Infos).call(this, props));\n\n    _this.onSearchChange = function (event) {\n      //whenever it gets changed\n      _this.setState({\n        searchfield: event.target.value\n      }); //update \"serachfiled is event.target.value\"\n\n    };\n\n    _this.state = {\n      results: [],\n      professor: {\n        name: '',\n        easiness: '',\n        contents: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Infos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/info', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.professor.name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          results: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    // filterdProfs = () =>{\n    //     this.state.professors.filter(prof => {\n    //     console.log(prof);\n    //     return prof.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    // })\n    // }\n    value: function render() {\n      // const filterdProfs = this.state.professors.filter(prof => {\n      //     console.log(prof);\n      //     //\"filter\" is a function to go thorough array in \"robots from State\", having a parameter \"robot\"\n      //     return prof.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n      //     //return the \"robot\"'s name if it is included\"serachfield's strings, setting lowercase every words\n      // })\n      return React.createElement(\"div\", {\n        className: \"measure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f2\",\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Easy or Hard\"), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        professors: this.state.results,\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Infos;\n}(React.Component);\n\nexport default Infos;","map":{"version":3,"sources":["/Users/hamashunsuke/Desktop/EasyorHard/Frontend/src/Components/Infos/Infos.js"],"names":["React","CardList","Scroll","Infos","props","onSearchChange","event","setState","searchfield","target","value","state","results","professor","name","easiness","contents","fetch","method","headers","body","JSON","stringify","then","response","json","users","onRouteChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAAoC;;AACpC,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAyBnBC,cAzBmB,GAyBF,UAACC,KAAD,EAAW;AAAE;AAC1B,YAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd,EADwB,CACyB;;AACpD,KA3BkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAFF,KAAb;AAFe;AAUlB;;;;wCAEmB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,4BAAD,EACD;AACIC,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFb;AAGIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,SAAX,CAAqBC;AADV,SAAf;AAHV,OADC,CAAL,CAQKS,IARL,CAQU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OARlB,EASKF,IATL,CASU,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACnB,QAAL,CAAc;AAACK,UAAAA,OAAO,EAAEc;AAAV,SAAd,CAAJ;AAAA,OATf;AAUH;;;AAMD;AACA;AACA;AACA;AACA;AACA;6BAES;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAqC,QAAA,OAAO,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,OAAjC;AAA0C,QAAA,aAAa,EAAE,KAAKR,KAAL,CAAWuB,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ;AAQH;;;;EApDe3B,KAAK,CAAC4B,S;;AAwD1B,eAAezB,KAAf","sourcesContent":["import React from 'react';\nimport CardList from './InfosCard'; //child\nimport Scroll from '../Scroll'\n\nclass Infos extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: [],\n            professor: {\n                name: '',\n                easiness: '',\n                contents: '',\n            }\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/info',\n            {\n                method: 'get',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    name: this.state.professor.name\n                })\n            })\n            .then(response => response.json())\n            .then(users => this.setState({results: users}));\n    }\n\n    onSearchChange = (event) => { //whenever it gets changed\n        this.setState({searchfield: event.target.value}) //update \"serachfiled is event.target.value\"\n    }\n\n    // filterdProfs = () =>{\n    //     this.state.professors.filter(prof => {\n    //     console.log(prof);\n    //     return prof.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    // })\n    // }\n\n    render() {\n        // const filterdProfs = this.state.professors.filter(prof => {\n        //     console.log(prof);\n        //     //\"filter\" is a function to go thorough array in \"robots from State\", having a parameter \"robot\"\n        //     return prof.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        //     //return the \"robot\"'s name if it is included\"serachfield's strings, setting lowercase every words\n        // })\n        return (\n            <div className=\"measure\">\n                <label className=\"db fw6 lh-copy f2\" htmlFor=\"name\">Easy or Hard</label>\n                <Scroll>\n                    <CardList professors={this.state.results} onRouteChange={this.props.onRouteChange}/>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\n\nexport default Infos;"]},"metadata":{},"sourceType":"module"}