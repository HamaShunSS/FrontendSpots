{"version":3,"sources":["Components/Navigation/Navigation.js","Components/List.js","Components/Scroll.js","Components/Search/Category.js","Components/Infos/InfosCard.js","Components/Infos/InfosCardList.js","Components/Infos/Infos.js","Components/Form/Checkbox.js","Components/Form/Form.js","Components/Form/Thankyou.js","Components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","onRouteChange","react_default","a","createElement","style","color","display","className","onClick","List","loadCategory","Scroll","props","overflowY","border","height","children","Category","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","htmlFor","Components_Scroll","Components_List","React","Component","Card","info","console","log","url","id","alt","src","location","rate","comments","CardList","infos","map","user","i","InfosCard","Infos","results","_this2","fetch","method","headers","Content-Type","body","JSON","stringify","category","then","response","json","informations","setState","filterdInfos","filter","InfosCardList","Checkbox","label","isSelected","onCheckboxChange","type","checked","onChange","Form","onNameChange","event","target","value","onLocationChange","onURLChange","onCommentsChange","handleRateChange","changeEvent","onSubmitForm","ramen","checkboxes","ラーメン","food","食事処","view","景色","cafe","カフェ","park","公園","club","クラブ","bar","バー","study","勉強する場所","hiking","ハイキング","shopping","買い物","beauty","美容系","selectAllCheckboxes","keys","forEach","checkbox","prevState","objectSpread","defineProperty","selectAll","deselectAll","handleCheckboxChange","handleFormSubmit","formSubmitEvent","preventDefault","createCheckbox","option","Form_Checkbox","key","createCheckboxes","reduce","options","onSubmit","Thankyou","Contact","initialState","route","isSignedIn","email","joined","App","loadUser","data","cat","_this$state","Components_Navigation_Navigation","Search_Category","Components_Infos_Infos","Form_Thankyou","Components_Form_Form","onInputChange","Components_Contact_Contact","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d989bd65.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange }) => {\n        return (\n            <nav style={{color: 'white', display: 'flex'}} className='fl w-100 w-100-ns tc bg-dark-gray { background-color: #333333 }'>\n                <p className=\"b f3 pa3 ph4 fl w-100 w-100-ns tc\">All For One</p>\n                <p onClick={() => onRouteChange('form')} className='fl w-100 w-100-ns tc f4 link dim pa3 pointer'>Form</p>\n                <p onClick={() => onRouteChange('home')} className='fl w-100 w-100-ns tc f4 link dim pa3 pointer'>Home</p>\n                <p onClick={() => onRouteChange('thankyou')} className='fl w-100 w-100-ns tc f4 link dim pa3 pointer'>Thank you</p>\n            </nav>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\n\nconst List = ({ onRouteChange, loadCategory }) => {\n    return(\n        <div>\n                            <div>\n                                <div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('ramen');}}\n                                        className='f3 link pa3 dim pointer'>ラーメン</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('food');}}\n                                        className='f3 link pa3 dim pointer'>食事処</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('view');}}\n                                        className='f3 link pa3 dim pointer'>景色</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('cafe');}}\n                                        className='f3 link pa3 dim pointer'>カフェ</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('park');}}\n                                        className='f3 link pa3 dim pointer'>公園</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('club');}}\n                                        className='f3 link pa3 dim pointer'>クラブ</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('bar');}}\n                                        className='f3 link dim pa3 pointer'>バー</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('study');}}\n                                        className='f3 link dim pa3 pointer'>勉強する場所</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('hiking');}}\n                                        className='f3 link dim pa3 pointer'>ハイキング</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('shopping');}}\n                                        className='f3 link dim pa3 pointer'>買い物</h2>\n                                </div>\n                                <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                                    <h2 onClick={() => {onRouteChange('infos'); loadCategory('beauty');}}\n                                        className='f3 link dim pa3 pointer'>美容系</h2>\n                                </div>\n                                </div>\n                            </div>\n        </div>\n    );\n}\n\nexport default List;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\n\n\nexport default Scroll;","import React from 'react';\nimport List from '../List'; //child\nimport Scroll from '../Scroll'\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"fl w-100 w-100-ns tc\">\n                <div className=\"pv6 fl w-100 w-100-ns tc\">\n                <label className=\"fl w-100 w-100-ns tc db fw6 lh-copy f1\">スポット</label>\n                <label className=\"fl w-100 w-100-ns tc db pv2 fw6 lh-copy f\">〜サンノゼのオススメのスポットを紹介〜</label>\n                </div>\n                <p></p>\n                <label className=\"fl w-100 w-100-ns tc db fw6 lh-copy f3\" htmlFor=\"name\">↓↓カテゴリーから選んでね！↓↓</label>\n                <Scroll>\n                    <List  onRouteChange={this.props.onRouteChange} loadCategory={this.props.loadCategory}/>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\n\nexport default Category;","import React from 'react';\n\n\n\n\nconst Card = ({ info } ) => {\n    console.log('url is ', info.url );\n    return(\n        <div className='tc bg-light-green dib br3 pa4 ma3 grow bw2 shadow-5'>\n            <div className=\"black\">\n                <h2>{info.name}</h2>\n                <img id='inputimage' alt='画像' src={info.url} className=\"pv3 fl w-100 w-100-ns tc\" />\n                <p className=\"\">住所：{info.location}</p>\n                <p>星：{info.rate}</p>\n                <p>コメント：{info.comments}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from \"./InfosCard\";\n\n\nconst CardList = ({infos}) => {\n    return(\n        <div>\n            {\n                infos.map((user, i) => {\n                    return (\n                        <Card\n                            info={infos[i]}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport CardList from './InfosCardList'; //child\nimport Scroll from '../Scroll';\n\nclass Infos extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: [],\n        };\n\n    }\n\n    componentDidMount() {\n        fetch('https://spots-for-sjsu-students.herokuapp.com/places',\n            {\n                method: 'post',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    category: this.props.category\n                })\n            })\n            .then(response => response.json())\n            .then(informations => this.setState({results: informations})\n            );\n        console.log('results is ',this.state.results);\n    }\n\n    render() {\n        const filterdInfos = this.state.results.filter(infos => {\n            //\"filter\" is a function to go thorough array in \"robots from State\", having a parameter \"robot\"\n            return infos\n        })\n        return (\n            <div className=\"cat\">\n                <div className=\"pv4\" >\n                <label className=\"fl pv4 w-100 w-100-ns tc db fw6 lh-copy f2\">オススメの場所です</label>\n                </div>\n                <Scroll>\n                    <CardList infos={filterdInfos} />\n                </Scroll>\n            </div>\n        );\n    }\n}\n\n\nexport default Infos;","import React from \"react\";\n\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n    <label className=\"form-check f6 ph2\">\n            <input\n                type=\"checkbox\"\n                name={label}\n                checked={isSelected}\n                onChange={onCheckboxChange}\n                className=\"form-check-input\"\n            />\n            {label}\n    </label>\n);\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\n\nconst category = [\"ラーメン\", \"食事処\", \"景色\",\"カフェ\",\"公園\", \"クラブ\", \"バー\", \"勉強する場所\", \"ハイキング\",\"買い物\", \"美容系\"];\n\nclass Form extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            checkboxes: category.reduce(\n                (options, option) => ({\n                    ...options,\n                    [option]: false\n                }),\n                {}\n            ),\n            ramen: '',\n            food: '',\n            view: '',\n            cafe: '',\n            park:'',\n            club: '',\n            bar: '',\n            study: '',\n            hiking: '',\n            shopping: '',\n            beauty:'',\n            location: '',\n            url:'',\n            rate:'',\n            comments: ''\n        };\n        // console.log(this.state.checkboxes)\n    }\n\n\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value}) // updated signInEmail from <input />\n    }\n\n    onLocationChange = (event) => {\n        this.setState({location: event.target.value}) // updated signInEmail from <input />\n    }\n\n    onURLChange = (event) => {\n        this.setState({url: event.target.value}) // updated signInEmail from <input />\n    }\n\n    onCommentsChange = (event) => {\n        this.setState({comments: event.target.value}) // updated signInEmail from <input />\n    }\n\n\n\n    handleRateChange = changeEvent => {\n        this.setState({\n            rate: changeEvent.target.value\n        });\n    };\n\n\n    onSubmitForm =() => {\n        fetch('https://spots-for-sjsu-students.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({ // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n                name: this.state.name,\n                ramen: this.state.checkboxes.ラーメン,\n                food: this.state.checkboxes.食事処,\n                view: this.state.checkboxes.景色,\n                cafe: this.state.checkboxes.カフェ,\n                park: this.state.checkboxes.公園,\n                club: this.state.checkboxes.クラブ,\n                bar: this.state.checkboxes.バー,\n                study: this.state.checkboxes.勉強する場所,\n                hiking: this.state.checkboxes.ハイキング,\n                shopping: this.state.checkboxes.買い物,\n                beauty: this.state.checkboxes.美容系,\n                location: this.state.location,\n                url: this.state.url,\n                rate: this.state.rate,\n                comments: this.state.comments\n            })\n        })\n            .then(response => response.json()) // Get response through json, and get data by \".then\"\n            .then(response => {console.log('what is ', response)\n                if (response === 'success') {\n                    this.props.onRouteChange('thankyou');\n                }\n            })\n    }\n\n\n//Check box\n\n    selectAllCheckboxes = isSelected => {\n        Object.keys(this.state.checkboxes).forEach(checkbox => {\n            // BONUS: Can you explain why we pass updater function to setState instead of an object?\n            this.setState(prevState => ({\n                checkboxes: {\n                    ...prevState.checkboxes,\n                    [checkbox]: isSelected\n                }\n            }));\n        });\n    };\n\n    selectAll = () => this.selectAllCheckboxes(true);\n\n    deselectAll = () => this.selectAllCheckboxes(false);\n\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n\n        this.setState(prevState => ({\n            checkboxes: {\n                ...prevState.checkboxes,\n                [name]: !prevState.checkboxes[name]\n            }\n        }));\n    };\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        Object.keys(this.state.checkboxes)\n            .filter(checkbox => this.state.checkboxes[checkbox])\n            .forEach(checkbox => {\n                console.log(checkbox, \"is selected.\");\n                console.log('the object is like ',this.state.checkboxes);\n                console.log('the 食事処 is like ',this.state.checkboxes.食事処);\n            });\n    };\n\n    createCheckbox = option => (\n        <Checkbox\n            label={option}\n            isSelected={this.state.checkboxes[option]}\n            onCheckboxChange={this.handleCheckboxChange}\n            key={option}\n        />\n    );\n\n    createCheckboxes = () => category.map(this.createCheckbox);\n\n\n\n    render(){\n        return (\n                <main className=\"pa4\">\n                    <div className=\"tc fl w-100 w-100-ns tc\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 mt4-ns \">\n                            <div className=\"f2 pv5 fl w-100 w-100-ns tc fw6 ph0 mh0\">オススメの場所をシェアハピして下さい！！</div>\n                            <div className=\"\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">場所の名前は？</label>\n                                <input\n                                    className=\"pa2 input-reset ba bg-white hover-bg-black hover-white w-100\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    onChange={this.onNameChange}\n                                />\n                            </div>\n\n                            <div className=\"container\">\n                                <div className=\"row mt-5\">\n                                    <div className=\"col-sm-12\">\n                                        <label className=\"db fw6 lh-copy f6 pt5\" htmlFor=\"name\">ジャンルは？　（複数選択可能）</label>\n                                        <div className=\"left\">\n                                        <form onSubmit={this.handleFormSubmit}>\n                                            {this.createCheckboxes()}\n                                            <div className=\"form-group mt-2\">\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-primary mr-2\"\n                                                    onClick={this.selectAll}\n                                                >\n                                                    Select All\n                                                </button>\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-primary mr-2\"\n                                                    onClick={this.deselectAll}\n                                                >\n                                                    Deselect All\n                                                </button>\n                                                {/*<button type=\"submit\" className=\"btn btn-primary\">*/}\n                                                    {/*Save*/}\n                                                {/*</button>*/}\n                                            </div>\n                                        </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                                <div className=\"pv3\">\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">写真のURLを貼って下さい</label>\n                                    <input\n                                        className=\"pa2 input-reset ba bg-white hover-bg-black hover-white w-100\"\n                                        type=\"text\"\n                                        name=\"url\"\n                                        id=\"url\"\n                                        onChange={this.onURLChange}\n                                    />\n                                </div>\n\n                            <form className=\"pv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">星</label>\n                                <div className=''>\n                                        <label className=\"f4 ph2\">\n                                        <input\n                                            type=\"radio\"\n                                            name=\"react-tips\"\n                                            value=\"5\"\n                                            checked={this.state.rate === \"5\"}\n                                            onChange={this.handleRateChange}\n                                            className=\"form-check-input\"\n                                        />\n                                        5\n                                        </label>\n                                    <label className=\"f4 ph2\">\n                                        <input\n                                            type=\"radio\"\n                                            name=\"react-tips\"\n                                            value=\"4\"\n                                            checked={this.state.rate === \"4\"}\n                                            onChange={this.handleRateChange}\n                                            className=\"form-check-input\"\n                                        />\n                                        4\n                                    </label>\n                                <label className=\"f4 ph2\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"react-tips\"\n                                        value=\"3\"\n                                        checked={this.state.rate === \"3\"}\n                                        onChange={this.handleRateChange}\n                                        className=\"form-check-input\"\n                                    />\n                                    3\n                                </label >\n                                <label className=\"f4 ph2\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"react-tips\"\n                                        value=\"2\"\n                                        checked={this.state.rate === \"2\"}\n                                        onChange={this.handleRateChange}\n                                        className=\"form-check-input\"\n                                    />\n                                    2\n                                </label>\n                                <label className=\"f4 ph2\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"react-tips\"\n                                        value=\"1\"\n                                        checked={this.state.rate === \"1\"}\n                                        onChange={this.handleRateChange}\n                                        className=\"form-check-input\"\n                                    />\n                                    1\n                                </label>\n                                </div>\n                            </form>\n                            <div className=\"pv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">住所</label>\n                                <input\n                                    className=\"pa2 input-reset ba bg-white hover-bg-black hover-white w-100\"\n                                    type=\"text\"\n                                    name=\"location\"\n                                    id=\"location\"\n                                    onChange={this.onLocationChange}\n                                />\n                            </div>\n                            <div className=\"pv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">コメント</label>\n                                <input\n                                    className=\"pa2 input-reset ba bg-white hover-bg-black hover-white w-100\"\n                                    type=\"text\"\n                                    name=\"comments\"\n                                    id=\"comments\"\n                                    onChange={this.onCommentsChange}\n                                />\n                            </div>\n                        </fieldset>\n\n\n                        <div className=\"pv3\">\n                            <input\n                                onClick={this.onSubmitForm}\n                                className=\"b ph3 pv3 input-reset ba b--black bg-white grow pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"シェアハピ\"\n                            />\n                        </div>\n                    </div>\n                </main>\n\n        );\n    }\n\n}\n\nexport default Form;","import React from 'react';\n\nconst Thankyou = ({ onRouteChange }) => {\n        return (\n            <div className=\"pv4 mb6-ns\">\n                <label className=\"db pv6 fw6 lh-copy f1 mt5 mt7-ns \" htmlFor=\"name\">シェアハピありがとうございます！！</label>\n                <p onClick={() => onRouteChange('form')} className='b link dim pa3 grow f4 pointer'>シェアハピを続ける</p>\n                <p onClick={() => onRouteChange('home')} className='b link dim pa3 grow f4 pointer'>ホームに戻る</p>\n            </div>\n        );\n    }\n\n\nexport default Thankyou;","import React from 'react';\n\nconst Contact = ({ onRouteChange }) => {\n    return (\n        <nav style={{color: 'white', display: 'flex'}} className='fl w-100 w-100-ns tc bg-dark-gray mt7-ns { background-color: #333333 }'>\n            <div className=\"ph4\">\n                <p className=\"b f3\">All For One</p>\n                <p className=\"f5\">〜スポット〜</p>\n                <p className=\"f5\">サンノゼのオススメのスポットを紹介</p>\n                <p className=\"f6\">Made by サンノゼの先輩方</p>\n            </div>\n            <div className=\"ph4\">\n                <p className=\"b f3\">質問・連絡先</p>\n                <p className=\"f5\">Location: 1 Washington Sq, San Jose, CA 95192</p>\n                <p className=\"f6\">Email: shunsuke.hama@sjsu.edu</p>\n            </div>\n        </nav>\n    );\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\n// import Carousel from 'react-bootstrap/Carousel';\nimport Navigation from './Components/Navigation/Navigation';\nimport Category from './Components/Search/Category';\nimport Infos from './Components/Infos/Infos';\nimport Form from './Components/Form/Form';\nimport Thankyou from \"./Components/Form/Thankyou\";\nimport Contact from \"./Components/Contact/Contact\";\n\nconst initialState = {\n    category: '',\n    route: 'home',\n    isSignedIn: true,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: ''\n    }\n}\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = initialState; //interact parent with children\n  }\n\n  loadUser = (data) => {\n      this.setState({user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          joined: data.joined\n      }})\n  }\n\n    loadCategory = (cat) => {\n        this.setState({\n            category: cat\n        })\n        console.log(cat)\n    }\n\n\n    // onInputChange = (event) => {\n    //     this.setState({input: event.target.value}); // When event happens, get the event value\n    // }\n\n    // onButtonSubmit = () => {\n    //     this.setState({imageUrl: this.state.input});\n    //     fetch('http://localhost:3000/imageurl', { //fetch connects frontend with the server\n    //         method: 'post',\n    //         headers: {'Content-Type': 'application/json'},\n    //         body: JSON.stringify({\n    //             input: this.state.input\n    //         })\n    //     })\n    //         .then(response => response.json()) //after \"fetch\", always do \".then( response => response.json())\"\n    //         .then(response => {\n    //             if (response) {\n    //                 fetch('http://localhost:3000/image', { //fetch connects frontend with the server\n    //                     method: 'put',\n    //                     headers: {'Content-Type': 'application/json'},\n    //                     body: JSON.stringify({ // Send email and password updated at \"onEmailChange\" and \"onPasswordChange\" to the database through JSON.stringify\n    //                         id: this.state.user.id\n    //                     })\n    //                 })\n    //                     .then(response => response.json())\n    //                     .then(count => {\n    //                         this.setState(Object.assign(this.state.user, {entries: count}))\n    //                     })\n    //                     .catch(console.log)\n    //             }\n    //             this.displayFaceBox(this.calculateFaceLocation(response)) //.outputs[0].data.regions[0].region_info.bounding_box\n    //         })\n    //         .catch(err => console.log(err));\n    //     // do something with response\n    // }\n\n\n\n\n\nonRouteChange = (route) => {\n      this.setState({route: route});\n}\n\n\n  render() {\n      const { isSignedIn, route} = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n          { route === 'home' || route === 'category'\n              ? <div>\n                  < Category loadUser={this.loadUser} onRouteChange={this.onRouteChange} loadCategory={this.loadCategory}/>\n\n                </div>\n              :(\n                          route === 'category'\n                          ?< Category loadUser={this.loadUser} onRouteChange={this.onRouteChange} loadCategory={this.loadCategory}/>\n                          :(\n                              route === 'infos'\n                              ?< Infos loadUser={this.loadUser}  onRouteChange={this.onRouteChange} loadCategory={this.loadCategory} category={this.state.category} />\n                              :(\n                                  route === 'thankyou'\n                                  ?< Thankyou onRouteChange={this.onRouteChange} />\n                                  :(\n                                     < Form loadUser={this.loadUser}  onRouteChange={this.onRouteChange} onInputChange={this.onInputChange} />\n                                      )\n                                  )\n                          )\n                  )\n          }\n          <Contact isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWf\nserviceWorker.unregister();\n"],"sourceRoot":""}